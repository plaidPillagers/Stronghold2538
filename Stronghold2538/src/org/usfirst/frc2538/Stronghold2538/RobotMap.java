// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2538.Stronghold2538;
    

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveSystemLeftMotor;
    public static SpeedController driveSystemRightMotor;
    public static RobotDrive driveSystemRobotDrive21;
    public static CANTalon liftscissors1;
    public static CANTalon liftscissors2;
    public static RobotDrive liftRobotDrive21;
    public static DigitalInput liftUp;
    public static DigitalInput liftDown;
    public static SpeedController bIMBIMwheels;
    public static SpeedController bIMBIMwheels2;
    public static RobotDrive bIMRobotDrive21;
    public static SpeedController bIMBIMmove;
    public static SpeedController bIMSpeedController2;
    public static RobotDrive bIMRobotDrive22;
    public static DigitalInput bIMbimDown;
    public static DigitalInput bIMbimUp;
    public static SpeedController armArmScrew;
    public static SpeedController armArmExtension;
    public static RobotDrive armRobotDrive21;
    public static DigitalInput armSheniqua;
    public static DigitalInput armJosh;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveSystemLeftMotor = new VictorSP(0);
        LiveWindow.addActuator("driveSystem", "LeftMotor", (VictorSP) driveSystemLeftMotor);
        
        driveSystemRightMotor = new VictorSP(1);
        LiveWindow.addActuator("driveSystem", "RightMotor", (VictorSP) driveSystemRightMotor);
        
        driveSystemRobotDrive21 = new RobotDrive(driveSystemLeftMotor, driveSystemRightMotor);
        
        driveSystemRobotDrive21.setSafetyEnabled(true);
        driveSystemRobotDrive21.setExpiration(0.1);
        driveSystemRobotDrive21.setSensitivity(0.5);
        driveSystemRobotDrive21.setMaxOutput(1.0);

        liftscissors1 = new CANTalon(0);
        LiveWindow.addActuator("lift", "scissors1", liftscissors1);
        
        liftscissors2 = new CANTalon(1);
        LiveWindow.addActuator("lift", "scissors2", liftscissors2);
        
        liftRobotDrive21 = new RobotDrive(liftscissors1, liftscissors2);
        
        liftRobotDrive21.setSafetyEnabled(true);
        liftRobotDrive21.setExpiration(0.1);
        liftRobotDrive21.setSensitivity(0.5);
        liftRobotDrive21.setMaxOutput(1.0);

        liftUp = new DigitalInput(0);
        LiveWindow.addSensor("lift", "Up", liftUp);
        
        liftDown = new DigitalInput(1);
        LiveWindow.addSensor("lift", "Down", liftDown);
        
        bIMBIMwheels = new Talon(3);
        LiveWindow.addActuator("BIM", "BIMwheels", (Talon) bIMBIMwheels);
        
        bIMBIMwheels2 = new Talon(2);
        LiveWindow.addActuator("BIM", "BIMwheels2", (Talon) bIMBIMwheels2);
        
        bIMRobotDrive21 = new RobotDrive(bIMBIMwheels2, bIMBIMwheels);
        
        bIMRobotDrive21.setSafetyEnabled(true);
        bIMRobotDrive21.setExpiration(0.1);
        bIMRobotDrive21.setSensitivity(0.5);
        bIMRobotDrive21.setMaxOutput(1.0);

        bIMBIMmove = new VictorSP(8);
        LiveWindow.addActuator("BIM", "BIMmove", (VictorSP) bIMBIMmove);
        
        bIMSpeedController2 = new Talon(9);
        LiveWindow.addActuator("BIM", "Speed Controller 2", (Talon) bIMSpeedController2);
        
        bIMRobotDrive22 = new RobotDrive(bIMBIMmove, bIMSpeedController2);
        
        bIMRobotDrive22.setSafetyEnabled(true);
        bIMRobotDrive22.setExpiration(0.1);
        bIMRobotDrive22.setSensitivity(0.5);
        bIMRobotDrive22.setMaxOutput(1.0);

        bIMbimDown = new DigitalInput(4);
        LiveWindow.addSensor("BIM", "bimDown", bIMbimDown);
        
        bIMbimUp = new DigitalInput(5);
        LiveWindow.addSensor("BIM", "bimUp", bIMbimUp);
        
        armArmScrew = new VictorSP(4);
        LiveWindow.addActuator("arm", "ArmScrew", (VictorSP) armArmScrew);
        
        armArmExtension = new VictorSP(5);
        LiveWindow.addActuator("arm", "ArmExtension", (VictorSP) armArmExtension);
        
        armRobotDrive21 = new RobotDrive(armArmScrew, armArmExtension);
        
        armRobotDrive21.setSafetyEnabled(true);
        armRobotDrive21.setExpiration(0.1);
        armRobotDrive21.setSensitivity(0.5);
        armRobotDrive21.setMaxOutput(1.0);

        armSheniqua = new DigitalInput(2);
        LiveWindow.addSensor("arm", "Sheniqua", armSheniqua);
        
        armJosh = new DigitalInput(3);
        LiveWindow.addSensor("arm", "Josh", armJosh);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
